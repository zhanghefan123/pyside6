# 模型中数据的组织结构 -- 列表型、表格型、树型
# 注：由于视图只是一个框架，只负责呈现模型中的内容，模型要先将数据排列的样式构建出来

"""
重要概念：
1. 项目 -- 模型中的一个单元格，用于存放数据
2. 项目索引 -- QModelIndex，用于定位到具体的项目(映射到一个具体的单元格)（视图和委托都通过它来定位到模型中的数据）

    QModelIndex有三个重要的属性：row（行）、column（列）、parent（父级）
    ①、列表型模型的QModelIndex定位（图）只需要通过行来进行定位
    ②、表格型模型的QModelIndex定位（图）需要通过行或者类来进行定位
    ③、树型模型的QModelIndex定位（图）需要通过行、列、父级来进行定位，根项目不需要进行父级的指定，如果是处于第一层，第二层，第三层
    那么还需要进行父亲的指定


3. 数据"角色" -- 指定要获取的数据的"具体的信息"（图）
    * 当视图View向模型Model索要数据时，不仅要提供项目索引index，还必须要提供角色role；index和role共同决定了视图到底在向模型请求哪个数据
    数据可能存在不同的元信息，因为数据可能包含其他的一些东西。比如：数据可能包含图标、颜色、字体、对齐方式等等，这些都是数据的元信息
    即我们首先需要告诉我们的的数据在哪，然后我们需要什么数据。
"""